#!/usr/bin/openrc-run

if [ ! -L "$RC_SERVICE" ]; then
	eerror 'this service file is a template, use links to this template file with names in the form of tor-XXX'
	return 1
elif ! echo "$RC_SVCNAME" | grep -q '^tor-'; then
	eerror 'link name must be in the form of tor-XXX'
	return 1
fi

supervisor='supervise-daemon'
id="${RC_SVCNAME#tor-}"
command='/usr/bin/tor'
config_file="/etc/tor/torrc-${id}"
pid_file="/run/tor/supervise-tor-${id}.pid"
command_args="-f $config_file --hush"
command_args_background="--runasdaemon 1 --pidfile $pid_file"
retry="${GRACEFUL_TIMEOUT:-60}"
stopsig='INT'
log_file="/var/log/tor/tor-${id}.log"
data_dir="/var/lib/tor/tor-${id}"
rc_ulimit='-n 30000'
extra_commands='checkconfig'

depend()
{
	provide tor
}

checkconfig()
{
	if [ ! -e "$config_file" ]; then
		eerror "Tor configuration $config_file does not exist."
		return 1
	elif ! grep '^DataDirectory' "$config_file" | grep -q "${id}$"; then
		eerror "Bad DataDirectory option in $config_file"
		return 1
	elif ! grep '^Log' "$config_file" | grep -q "${id}.log$"; then
		eerror "Bad Log option in $config_file"
		return 1
	elif grep -r "^$(grep '^SOCKSPort [0-9]\+' "$config_file")" /etc/tor | grep -qFv "${config_file}:"; then
		eerror "The socks port used in $config_file is already used somewhere else in other config files"
		return 1
	elif ! "$command" -f "$config_file" --verify-config --hush 1>/dev/null 2>&1; then
		eerror "Tor configuration $config_file is not valid."
		return 1
	fi
}

start_pre()
{
	checkconfig || return 1

	checkpath -d -m 0755 -o tor:tor "${log_file%/*}"
	checkpath -f -F -m 0644 -o tor:tor "$log_file"

	checkpath -d -m 0700 -o tor:tor "${data_dir%/*}"
	checkpath -d -m 0700 -o tor:tor "$data_dir"

	checkpath -d -m 0755 -o tor:tor "${pid_file%/*}"
}
